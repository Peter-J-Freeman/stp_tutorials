"""
Simple script that demonstrates how to iterate over a list of items.
"""


# Function to get the coding sequence from a cDNA sequence
def get_cds(cdna_string, cds_start, cds_end):
    return cdna_string[cds_start:cds_end+1].lower()


# list and transcribe the DNA sequence
def list_and_transcribe(cds_string):
    return list(cds_string.replace("\n", "").replace(" ", "").replace("t", "u"))


# Function to pull out the codons from a coding sequence
def get_codons(cds_list):
    """
    Function to pull out the codons from a coding sequence
    :param cds_list: List of nucleotides
    :return: List of codons
    """
    codons = []
    for i in range(0, len(cds_list), 3):
        codon = cds_list[i:i + 3]
        codons.append("".join(codon))
    return codons

# Translating the coding sequence list
def translate(codons):
    """
    Function to translate the coding sequence list
    :param cds_list: List of nucleotides
    :return: List of amino acids
    """
    # Define the codon table
    translation_dict = \
        {
            ('UCU', 'UCC', 'UCA', 'UCG', 'AGU', 'AGC'): 'S', ('UUA', 'UUG', 'CUU', 'CUC', 'CUA', 'CUG'): 'L',
            ('UGU', 'UGC'): 'C', 'UGG': 'W', ('GAA', 'GAG'): 'E', ('GAU', 'GAC'): 'D', ('CCU', 'CCC', 'CCA',
                                                                                        'CCG'): 'P',
            ('GUU', 'GUC', 'GUA', 'GUG'): 'V', ('AAU', 'AAC'): 'N', 'AUG': 'M', ('AAA', 'AAG'): 'K', ('UAU',
                                                                                                      'UAC'): 'Y',
            ('AUU', 'AUC', 'AUA'): 'I', ('CAA', 'CAG'): 'Q', ('UUU', 'UUC'): 'F', ('CGU', 'CGC', 'CGA', 'CGG',
                                                                                   'AGA', 'AGG'): 'R',
            ('ACU', 'ACC', 'ACA', 'ACG'): 'U', ('GCU', 'GCC', 'GCA', 'GCG'): 'A', ('GGU', 'GGC', 'GGA', 'GGG'): 'G',
            ('CAU', 'CAC'): 'H', ('UAA', 'UAG', 'UGA'): '*'

        }

    amino_acids = []
    for codon in codons:
        for key, value in translation_dict.items():
            if codon.upper() in key:
                amino_acids.append(value)

    return amino_acids


# Sequence of the COL10A1 gene https://www.ncbi.nlm.nih.gov/nuccore/NM_001424106.1
cdna_string = "".join(""""
              CAAAAAGCTCGGGAAGTAGTGGACTGTTTTTACCCCTCCTGGGATCACCACTGACAGCATCCATGAAGTT
              CTGACAGAAGAACACACCAGGATGACAAAGTAGTGACTTTTAAAGAGCAGCCAACAACAAGCATATAGGG
              AATCTCTCAGCAAATACAGAATCCATCTGAGAATATGCTGCCACAAATACCCTTTTTGCTGCTAGTATCC
              TTGAACTTGGTTCATGGAGTGTTTTACGCTGAACGATACCAAATGCCCACAGGCATAAAAGGCCCACTAC
              CCAACACCAAGACACAGTTCTTCATTCCCTACACCATAAAGAGTAAAGGTATAGCAGTAAGAGGAGAGCA
              AGGTACTCCTGGTCCACCAGGCCCTGCTGGACCTCGAGGGCACCCAGGTCCTTCTGGACCACCAGGAAAA
              CCAGGCTACGGAAGTCCTGGACTCCAAGGAGAGCCAGGGTTGCCAGGACCACCGGGACCATCAGCTGTAG
              GGAAACCAGGTGTGCCAGGACTCCCAGGAAAACCAGGAGAGAGAGGACCATATGGACCAAAAGGAGATGT
              TGGACCAGCTGGCCTACCAGGACCCCGGGGCCCACCAGGACCACCTGGAATCCCTGGACCGGCTGGAATT
              TCTGTGCCAGGAAAACCTGGACAACAGGGACCCACAGGAGCCCCAGGACCCAGGGGCTTTCCTGGAGAAA
              AGGGTGCACCAGGAGTCCCTGGTATGAATGGACAGAAAGGGGAAATGGGATATGGTGCTCCTGGTCGTCC
              AGGTGAGAGGGGTCTTCCAGGCCCTCAGGGTCCCACAGGACCATCTGGCCCTCCTGGAGTGGGAAAAAGA
              GGTGAAAATGGGGTTCCAGGACAGCCAGGCATCAAAGGTGATAGAGGTTTTCCGGGAGAAATGGGACCAA
              TTGGCCCACCAGGTCCCCAAGGCCCTCCTGGGGAACGAGGGCCAGAAGGCATTGGAAAGCCAGGAGCTGC
              TGGAGCCCCAGGCCAGCCAGGGATTCCAGGAACAAAAGGTCTCCCTGGGGCTCCAGGAATAGCTGGGCCC
              CCAGGGCCTCCTGGCTTTGGGAAACCAGGCTTGCCAGGCCTGAAGGGAGAAAGAGGACCTGCTGGCCTTC
              CTGGGGGTCCAGGTGCCAAAGGGGAACAAGGGCCAGCAGGTCTTCCTGGGAAGCCAGGTCTGACTGGACC
              CCCTGGGAATATGGGACCCCAAGGACCAAAAGGCATCCCGGGTAGCCATGGTCTCCCAGGCCCTAAAGGT
              GAGACAGGGCCAGCTGGGCCTGCAGGATACCCTGGGGCTAAGGGTGAAAGGGGTTCCCCTGGGTCAGATG
                GAAAACCAGGGTACCCAGGAAAACCAGGTCTCGATGGTCCTAAGGGTAACCCAGGGTTACCAGGTCCAAA
                AGGTGATCCTGGAGTTGGAGGACCTCCTGGTCTCCCAGGCCCTGTGGGCCCAGCAGGAGCAAAGGGAATG
                CCCGGACACAATGGAGAGGCTGGCCCAAGAGGTGCCCCTGGAATACCAGGTACTAGAGGCCCTATTGGGC
                CACCAGGCATTCCAGGATTCCCTGGGTCTAAAGGGGATCCAGGAAGTCCCGGTCCTCCTGGCCCAGCTGG
                CATAGCAACTAAGGGCCTCAATGGACCCACCGGGCCACCAGGGCCTCCAGGTCCAAGAGGCCACTCTGGA
                GAGCCTGGTCTTCCAGGGCCCCCTGGGCCTCCAGGCCCACCAGGTCAAGCAGTCATGCCTGAGGGTTTTA
                TAAAGGCAGGCCAAAGGCCCAGTCTTTCTGGGACCCCTCTTGTTAGTGCCAACCAGGGGGTAACAGGAAT
                GCCTGTGTCTGCTTTTACTGTTATTCTCTCCAAAGCTTACCCAGCAATAGGAACTCCCATACCATTTGAT
                AAAATTTTGTATAACAGGCAACAGCATTATGACCCAAGGACTGGAATCTTTACTTGTCAGATACCAGGAA
                TATACTATTTTTCATACCACGTGCATGTGAAAGGGACTCATGTTTGGGTAGGCCTGTATAAGAATGGCAC
                CCCTGTAATGTACACCTATGATGAATACACCAAAGGCTACCTGGATCAGGCTTCAGGGAGTGCCATCATC
                GATCTCACAGAAAATGACCAGGTGTGGCTCCAGCTTCCCAATGCCGAGTCAAATGGCCTATACTCCTCTG
                AGTATGTCCACTCCTCTTTCTCAGGATTCCTAGTGGCTCCAATGTGAGTACACACAGAGCTAATCTAAAT
                CTTGTGCTAGAAAAAGCATTCTCTAACTCTACCCCACCCTACAAAATGCATATGGAGGTAGGCTGAAAAG
                AATGTAATTTTTATTTTCTGAAATACAGATTTGAGCTATCAGACCAACAAACCTTCCCCCTGAAAAGTGA
                GCAGCAACGTAAAAACGTATGTGAAGCCTCTCTTGAATTTCTAGTTAGCAATCTTAAGGCTCTTTAAGGT
                TTTCTCCAATATTAAAAAATATCACCAAAGAAGTCCTGCTATGTTAAAAACAAACAACAAAAAACAAACA
                ACAAAAAAAAAATTAAAAAAAAAAACAGAAATAGAGCTCTAAGTTATGTGAAATTTGATTTGAGAAACTC
                GGCATTTCCTTTTTAAAAAAGCCTGTTTCTAACTATGAATATGAGAACTTCTAGGAAACATCCAGGAGGT
                ATCATATAACTTTGTAGAACTTAAATACTTGAATATTCAAATTTAAAAGACACTGTATCCCCTAAAATAT
                TTCTGATGGTGCACTACTCTGAGGCCTGTATGGCCCCTTTCATCAATATCTATTCAAATATACAGGTGCA
                TATATACTTGTTAAAGCTCTTATATAAAAAAGCCCCAAAATATTGAAGTTCATCTGAAATGCAAGGTGCT
                TTCATCAATGAACCTTTTCAAACTTTTCTATGATTGCAGAGAAGCTTTTTATATACCCAGCATAACTTGG
                AAACAGGTATCTGACCTATTCTTATTTAGTTAACACAAGTGTGATTAATTTGATTTCTTTAATTCCTTAT
                TGAATCTTATGTGATATGATTTTCTGGATTTACAGAACATTAGCACATGTACCTTGTGCCTCCCATTCAA
                GTGAAGTTATAATTTACACTGAGGGTTTCAAAATTCGACTAGAAGTGGAGATATATTATTTATTTATGCA
                CTGTACTGTATTTTTATATTGCTGTTTAAAACTTTTAAGCTGTGCCTCACTTATTAAAGCACAAAATGTT
                TTACCTACTCCTTATTTACGACGCAATAAAATAACATCAATAGATTTTTAGGCTGAATTAATTTGAAAGC
                AGCAATTTGCTGTTCTCAACCATTCTTTCAAGGCTTTTCATTGTTCAAAGTTAATAAAAAAGTAGGACAA
                TAAAGTGATGGGTGGCTTTTA
                """.split())

cds_string = get_cds(cdna_string, cds_start=175, cds_end=2217)

# Make the string into a list
cds_list = list_and_transcribe(cds_string)

# Get the codons
codons = get_codons(cds_list)
print(codons)

# Get amino acid sequence list
amino_acids = translate(codons)
print(amino_acids)


